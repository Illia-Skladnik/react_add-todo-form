{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","classNames","TodoList","todos","map","userId","usersFromServer","find","App","useState","titleInput","setTitleInput","selectUser","setSelectUser","titleError","setTitleError","userError","setUserError","action","method","type","placeholder","value","onChange","event","target","disabled","onClick","length","currentUser","maxId","reduce","acc","el","Math","max","push","addTodo","preventDefault","ReactDOM","render","document","getElementById"],"mappings":"8MAAe,GACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,2B,uBCrDEC,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClCF,EAAgBE,EAAhBF,MAAOF,EAASI,EAATJ,KAEf,OACE,mBAAGK,UAAU,WAAWC,KAAI,iBAAYJ,GAAxC,SACGF,KCHMO,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClCC,EAA2BD,EAA3BC,UAAWC,EAAgBF,EAAhBE,MAAON,EAASI,EAATJ,KAE1B,OACE,0BACE,UAASI,EAAKT,GACdM,UAAWM,IAAW,WAAY,CAAE,sBAAuBF,IAF7D,UAIE,oBAAIJ,UAAU,kBAAd,SAAiCK,IAChCN,GAAQ,cAAC,EAAD,CAAUA,KAAMA,QCTlBQ,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,6BACE,yBAASR,UAAU,WAAnB,SACGQ,EAAMC,KAAI,SAAAN,GAAI,OACb,6BACE,cAAC,EAAD,CAAUA,KAAMA,KADTA,EAAKT,YCIf,IAAMc,EChBE,CACb,CACEd,GAAI,EACJW,MAAO,qBACPD,WAAW,EACXM,OAAQ,GAEV,CACEhB,GAAI,GACJW,MAAO,kBACPD,WAAW,EACXM,OAAQ,GAEV,CACEhB,GAAI,EACJW,MAAO,qCACPD,WAAW,EACXM,OAAQ,IDDiCD,KAAI,SAAAN,GAAI,kCAChDA,GADgD,IAEnDJ,MAReW,EAQDP,EAAKO,OAPDC,EAAgBC,MAAK,SAAAb,GAAI,OAAIA,EAAKL,KAAOgB,MAEvC,QAHtB,IAAiBA,KAWJG,EAAe,WAC1B,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCF,mBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAgCA,OACE,sBAAKtB,UAAU,MAAf,UACE,+CAEA,uBAAMuB,OAAO,aAAaC,OAAO,OAAjC,UACE,gCACE,sBAAKxB,UAAU,QAAf,mBAEE,uBACEyB,KAAK,OACL,UAAQ,aACRC,YAAY,gBACZC,MAAOZ,EACPa,SAAU,SAACC,GACTb,EAAca,EAAMC,OAAOH,OAC3BP,GAAc,MAGjBD,GAAc,sBAAMnB,UAAU,QAAhB,uCAInB,gCACE,sBAAKA,UAAU,QAAf,kBAEE,yBACE,UAAQ,aACR2B,MAAOV,EACPW,SAAU,SAACC,GACTX,GAAeW,EAAMC,OAAOH,OAC5BL,GAAa,IALjB,UAQE,wBAAQK,MAAM,IAAII,UAAQ,EAA1B,2BAEEpB,EAAgBF,KAAI,SAAAV,GAAI,OACtB,wBAEE4B,MAAO5B,EAAKL,GAFd,SAIGK,EAAKJ,MAHDI,EAAKL,UASjB2B,GAAa,sBAAMrB,UAAU,QAAhB,uCAIlB,wBACEyB,KAAK,SACL,UAAQ,eACRO,QAAS,SAACH,IAnFF,SAACnC,GASf,GAR0B,IAAtBqB,EAAWkB,QACbb,GAAc,GAGG,IAAfH,GACFK,GAAa,GAGI,IAAfL,GAA0C,IAAtBF,EAAWkB,OAAnC,CAIA,IAAMC,EAAcvB,EAAgBC,MAAK,SAAAb,GAAI,OAAIA,EAAKL,KAAOA,KACvDyC,EAAQ3B,EAAM4B,QAAO,SAACC,EAAKC,GAAN,OAAaC,KAAKC,IAAIH,EAAKC,EAAG5C,MAAK,GAE1DwC,IACF1B,EAAMiC,KAAK,CACT/C,GAAIyC,EAAQ,EACZzB,OAAQhB,EACRW,MAAOU,EACPX,WAAW,EACXL,KAAMmC,IAGRlB,EAAc,IACdE,EAAc,KA0DRwB,CAAQzB,GACRY,EAAMc,kBALV,oBAYF,yBAAS3C,UAAU,WAAnB,SACE,cAAC,EAAD,CAAUQ,MAAOA,UErHzBoC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.8f00fbf6.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { completed, title, user } = todo;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <ul>\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <li key={todo.id}>\n          <TodoInfo todo={todo} />\n        </li>\n      ))}\n    </section>\n  </ul>\n);\n","import './App.scss';\n\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App:React.FC = () => {\n  const [titleInput, setTitleInput] = useState('');\n  const [selectUser, setSelectUser] = useState(0);\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const addTodo = (id: number) => {\n    if (titleInput.length === 0) {\n      setTitleError(true);\n    }\n\n    if (selectUser === 0) {\n      setUserError(true);\n    }\n\n    if (selectUser === 0 || titleInput.length === 0) {\n      return;\n    }\n\n    const currentUser = usersFromServer.find(user => user.id === id);\n    const maxId = todos.reduce((acc, el) => Math.max(acc, el.id), 0);\n\n    if (currentUser) {\n      todos.push({\n        id: maxId + 1,\n        userId: id,\n        title: titleInput,\n        completed: false,\n        user: currentUser,\n      });\n\n      setTitleInput('');\n      setSelectUser(0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\">\n        <label>\n          <div className=\"field\">\n            Title:\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={titleInput}\n              onChange={(event) => {\n                setTitleInput(event.target.value);\n                setTitleError(false);\n              }}\n            />\n            {titleError && <span className=\"error\">Please enter a title</span>}\n          </div>\n        </label>\n\n        <label>\n          <div className=\"field\">\n            User:\n            <select\n              data-cy=\"userSelect\"\n              value={selectUser}\n              onChange={(event) => {\n                setSelectUser(+event.target.value);\n                setUserError(false);\n              }}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {\n                usersFromServer.map(user => (\n                  <option\n                    key={user.id}\n                    value={user.id}\n                  >\n                    {user.name}\n                  </option>\n                ))\n              }\n            </select>\n\n            {userError && <span className=\"error\">Please choose a user</span>}\n          </div>\n        </label>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={(event) => {\n            addTodo(selectUser);\n            event.preventDefault();\n          }}\n        >\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todos={todos} />\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}